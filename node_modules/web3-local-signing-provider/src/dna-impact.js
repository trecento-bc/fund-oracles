const impact = {
  A: 1,
  C: 2,
  G: 3,
  T: 4
}
function solution(s, p, q) {
  let impacts = []
  let start = new Date().getTime()
  for(let i = 0; i < s.length; i++) {
    impacts.push(impact[s.substr(i, 1)])
  }
  console.log('decode', new Date().getTime() - start)

  start = new Date().getTime()
  let mins = []
  for(let i = 0; i < p.length; i++) {
    let min = 5
    for(let j = p[i]; j <= q[i]; j++) {
      if(impacts[j] < min) min = impacts[j]
      if(min == 1) break;
    }
    mins.push(min)
  }
  console.log('browse', new Date().getTime() - start)

  return mins
}

let s = ''
let n = 1e5
let m = 5e4
let dna = ['A', 'C', 'G', 'T']
let p = []
let q = []
for (let k = 1; k <= n; k++) {
  s += dna[Math.floor(Math.random() * 4)]
}

for (let k = 0; k < m; k++) {
  p.push(Math.floor(Math.random() * n))
  q.push(Math.min(p[k] + Math.floor(Math.random() * n / 2)), n - 1)
}

solution(s, p, q)